import logging
from telegram import Update, BotCommand
from telegram.ext import Updater, CommandHandler, CallbackContext
from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
import pytz

# ุฅุนุฏุงุฏ ุงูููุฌ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ุชููู ุงูุจูุช
BOT_TOKEN = "7674655190:AAHGQbac6F9ecwtp7fP0DK5B3_38cs0Jv1M"

# ูุตูุต ุงูุฃุฐูุงุฑ
MORNING_AZKAR = """
๐ฟ ุฃุฐูุงุฑ ุงูุตุจุงุญ:

1. ุจูุณููู ุงูููู ุงูุฐู ูุง ููุถููุฑูู ููุนู ุงุณููููู ุดููุกู ูู ุงูุฃุฑูุถู ูููุง ูู ุงูุณูููุงุกู ูููููู ุงูุณููููุนู ุงูุนููููู. ร3
2. ุฑูุถููุชู ุจูุงูููู ุฑูุจูููุงู ููุจูุงูุฅุณููุงูู ุฏูููุงู ููุจูููุญูููููุฏู ุตูู ุงููู ุนููู ูุณูู ููุจููููุงู.  ร3
3. ุณูุจูุญูุงูู ุงูููู ููุจูุญููููุฏููู ุนูุฏูุฏู ุฎููููููู ุ ููุฑูุถูุง ููููุณููู ุ ููุฒููููุฉู ุนููุฑูุดููู ุ ูููููุฏุงุฏู ููููููุงุชููู.
4. ุงููููููููู ุฅูููููู ุฃูุตูุจููุญูุชู ุฃูุดููููุฏูู ุ ููุฃูุดููููุฏู ุญููููููุฉู ุนููุฑูุดููู ุ ููููููุงุฆูููุชููู ุ ููุฌููููุนู ุฎููููููู ุ ุฃููููููู ุฃููููุชู ุงูููู ูุง ุฅููู ุฅูุงู ุฃููููุชู ููุญููุฏููู ูุง ุดูุฑููู ูููู ุ ููุฃูููู ููุญููููุฏุงู ุนูุจููุฏููู ููุฑูุณูููููู.
"""

EVENING_AZKAR = """
๐ฟ ุฃุฐูุงุฑ ุงููุณุงุก:

1. ุฑูุถููุชู ุจูุงูููู ุฑูุจูููุงู ููุจูุงูุฅุณููุงูู ุฏูููุงู ููุจูููุญูููููุฏู ุตูู ุงููู ุนููู ูุณูู ููุจููููุงู ู ุฑุณููุง . ร3
2. ุงููููููููู ูุง ุฃููุณู ุจู ููููู ููุนููููุฉู ุฃูู ุจูุฃูุญููุฏู ููููู ุฎููููููู ุ ููููููููู ููุญููุฏููู ูุง ุดุฑููู ูููู ุ ููููููู ุงููุญููููุฏู ููููููู ุงูุดูููููุฑ.
3. ููุง ุญูููู ููุง ููููููู ุจูุฑูุญูููุชููู ุฃุณูุชูุบููุซู ุฃุตูููุญู ููู ุดูุฃููู ููููููู ูููุงู ุชูููููููู ุฅููู ููููุณูู ุทููุฑูููุฉู ุนููููู.
4. ุงููููููููู ุนุงููููู ูู ุจูุฏูููู ุ ุงููููููููู ุนุงููููู ูู ุณููููุนู ุ ุงููููููููู ุนุงููููู ูู ุจูุตููุฑู ุ ูุง ุฅููู ุฅูุงู ุฃููููุชู.
5. ุฃูุนููุฐู ุจูููููููุงุชู ุงููููู ุงูุชููุงูููุงุชู ูููู ุดููุฑูู ูุง ุฎููููู.
"""

FRIDAY_AZKAR = """
๐น๐ธููู ุงูุฌูุนุฉ๐ธ๐น
๏ดฟ ูุง ุฃููููููุง ุงูููุฐูููู ุขูููููุง ุฅูุฐูุง ูููุฏููู ูููุตููููุงุฉู ูููู ูููููู ุงููุฌูููุนูุฉู ููุงุณูุนูููุง ุฅูููู ุฐูููุฑู ุงูููููู ููุฐูุฑููุง ุงููุจูููุนู ุฐููููููู ุฎูููุฑู ูููููู ุฅููู ููููุชููู ุชูุนูููููููู ๏ดพ [ุงูุฌูุนุฉ:9]

ูุงู ุฑุณูู ุงููู ๏ทบ :
 (ุฎูููุฑู ูููููู ุทูููุนูุชู ุนููููููู ุงูุดููููุณู ูููููู ุงููุฌูููุนูุฉูุ ููููู ุฎููููู ุขุฏูููุ ููููููู ุฃูุฏูุฎููู ุงููุฌููููุฉูุ ููููููู ุฃูุฎูุฑูุฌู ููููููุง). ุฑูุงู ูุณูู

**ุณูู ุงูุฌูุนุฉ**
1- ุงูุงุบุชุณุงู
2- ุงูุชุทูุจ
3- ุงูุชุจููุฑ ุฅูู ุงููุณุฌุฏ
4- ุชุญุฑู ุณุงุนุฉ ุงูุฅุฌุงุจุฉ
5- ูุจุณ ุฃุญุณู ุงูุซูุงุจ
6- ูุซุฑุฉ ุงูุตูุงุฉ ุนูู ุงููุจู ุตูู ุงููู ุนููู ูุณูู
7- ูุฑุงุกุฉ ุณูุฑุฉ ุงูููู
8- ุงูุชุณูู
"""

# ูุชุบูุฑ ูุชุฎุฒูู ุงูุดุงุช ุขู ุฏู
chat_id = None

def send_message(context: CallbackContext, text: str):
    global chat_id
    if chat_id:
        context.bot.send_message(chat_id=chat_id, text=text)
    else:
        logger.warning("chat_id ุบูุฑ ูุนุฑู ุจุนุฏุ ูุง ูููู ุฅุฑุณุงู ุงูุฑุณุงูุฉ")

def start(update: Update, context: CallbackContext):
    global chat_id
    chat_id = update.effective_chat.id
    update.message.reply_text("๐ฟ ุชู ุชูุนูู ุฅุฑุณุงู ุงูุฃุฐูุงุฑ ุงูุชููุงุฆูุ ูููููู ุงุณุชุฎุฏุงู ุงูุฃูุงูุฑ ูุฅุฑุณุงู ุงูุฃุฐูุงุฑ ูุฏููุงู.\n\nุงูุชุจ /help ููุนุฑูุฉ ุงูุฃูุงูุฑ.")

def send_morning_command(update: Update, context: CallbackContext):
    update.message.reply_text(MORNING_AZKAR)

def send_evening_command(update: Update, context: CallbackContext):
    update.message.reply_text(EVENING_AZKAR)

def send_friday_command(update: Update, context: CallbackContext):
    update.message.reply_text(FRIDAY_AZKAR)

def help_command(update: Update, context: CallbackContext):
    help_text = """
ุฃูุงูุฑ ุงูุจูุช:
/start - ุชูุนูู ุงูุจูุช ูุจุฏุก ุฅุฑุณุงู ุงูุฃุฐูุงุฑ ุงูุชููุงุฆูุฉ
/morning - ุฅุฑุณุงู ุฃุฐูุงุฑ ุงูุตุจุงุญ ุงูุขู
/evening - ุฅุฑุณุงู ุฃุฐูุงุฑ ุงููุณุงุก ุงูุขู
/friday - ุฅุฑุณุงู ุฃุฐูุงุฑ ุงูุฌูุนุฉ ุงูุขู
/help - ุนุฑุถ ูุฐู ุงูุฑุณุงูุฉ
"""
    update.message.reply_text(help_text)

def main():
    updater = Updater(BOT_TOKEN)
    dp = updater.dispatcher

    # ุชุนููู ุฃูุงูุฑ ุงูุจูุช ูุชุธูุฑ ูู ูุงุฆูุฉ ุงูุฃูุงูุฑ ุจุชููุฌุฑุงู
    updater.bot.set_my_commands([
        BotCommand("start", "ุชูุนูู ุงูุจูุช ูุจุฏุก ุฅุฑุณุงู ุงูุฃุฐูุงุฑ"),
        BotCommand("morning", "ุฃุฑุณู ุฃุฐูุงุฑ ุงูุตุจุงุญ ุงูุขู"),
        BotCommand("evening", "ุฃุฑุณู ุฃุฐูุงุฑ ุงููุณุงุก ุงูุขู"),
        BotCommand("friday", "ุฃุฑุณู ุฃุฐูุงุฑ ุงูุฌูุนุฉ ุงูุขู"),
        BotCommand("help", "ุนุฑุถ ุฃูุงูุฑ ุงูุจูุช"),
    ])

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("morning", send_morning_command))
    dp.add_handler(CommandHandler("evening", send_evening_command))
    dp.add_handler(CommandHandler("friday", send_friday_command))
    dp.add_handler(CommandHandler("help", help_command))

    # ุฅุนุฏุงุฏ ุงูุฌุฏููุฉ ูุน ุชูููุช ุงููุงูุฑุฉ
    tz = pytz.timezone("Africa/Cairo")
    scheduler = BackgroundScheduler(timezone=tz)
    scheduler.add_job(send_message, 'cron', hour=4, minute=25, args=[updater.bot, MORNING_AZKAR])
    scheduler.add_job(send_message, 'cron', hour=20, minute=6, args=[updater.bot, EVENING_AZKAR])
    scheduler.add_job(send_message, 'cron', day_of_week='fri', hour=7, minute=0, args=[updater.bot, FRIDAY_AZKAR])
    scheduler.start()

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
